version: '3.9'

networks:
  api_net:
    driver: bridge

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - socket_volume:/tmp
      - nginx_logs:/var/log/nginx
    depends_on:
      - micro_blog
    networks:
      - api_net

  db:
    image: postgres:16.3
    container_name: api_db
    restart: always
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - postgres_storage:/var/lib/postgresql/data
      - postgres_logs:/logs_postgres
    shm_size: 256mb
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    command:
      - --log_destination=stderr
      - --logging_collector=on
      - --log_directory=./logs_postgres/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - api_net

  adminer:
    container_name: adminer
    image: adminer:4.8.1
    restart: always
    ports:
      - '8080:8080'
    networks:
      - api_net
    environment:
      - ADMINER_DESIGN=pepa-linha-dark
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      - db


  micro_blog:
    build:
      dockerfile: Dockerfile
      context: ./
    container_name: micro_blog
    image: micro_blog:${VERSION_API}
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - JWT_PRIVATE_KEY=${JWT_PRIVATE_KEY}
      - JWT_PUBLIC_KEY=${JWT_PUBLIC_KEY}
    command: ["/app/start.sh"]
    depends_on:
      - db
    networks:
      - api_net
    volumes:
      - socket_volume:/tmp
      - api_logs:/var/log/nginx
    env_file:
      - .env
    stop_grace_period: 10s

volumes:
  postgres_storage: { }
  socket_volume: { }
  nginx_logs: { }
  postgres_logs: { }
  api_logs: { }
